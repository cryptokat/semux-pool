#
# General/required configuration
#

# Delegate Address
delegateAddress = <FILL IN DELEGATE ADDRESS>

# Pull pool profits out to a more secure account
# To leave them on the delegate, put delegate address here
# Using this limits your exposure to bugs in this software
# Coming soon - add support for multiple addresses based on %
poolProfitsAddress = <FILL IN PAYMENT ADDRESS>

# set this to 'true' to run without paying out money for tweaking parameters
# It is HIGHLY recommended that you run this in debug mode at first and analyze
# the payouts jsons
debugMode = true

# What % of fees to pay for hosting/delegate registration (0.1 = 10% fee)
# As a pool needs to burn 1000 SEM for delegate, these pool fees are higher than most
# pools to start.  After a delegate has earned back its initial burn, lower fees make sense.

poolFeePercent = 0.20

#
# Connection for REST API
apiHost = localhost
apiUser = user
apiPass = pass
apiPort = 5171

# For daily payouts (which most pools seem to prefer)
# You can set a time of day to make payments
# This takes precedence over payoutEveryNBlocks
# Comment out to go back to per block # payouts
payoutTime = 13:00

# #######################################
# General/Advanced Pool configuration
# (leaving these as defaults is fine)
# #######################################

# To prevent whales from moving votes in after ensuring their validator
# We need to have a minimum age on votes before counting them.
minimumVoteAgeBeforeCounting = 200

# Experimental!
# TODO - work in progress - this currently does nothing, just starting a feature request from Phash
# To encourage longterm voters, a pool's fees are high at first, but drop over time
# as a vote ages like fine wine.
# So a user votes 100 on day 1.  Then on day 10, they vote another 100
# The fees for the first 100 are low, and the fees on the later one are higher, since they are
# new.  Unvotes come out of the oldest bucket, to penalize pool jumping, and encourage
# long term voting.
feeReduction.enabled = false
feeReduction.highestFee = 0.20
feeReduction.lowestFee = 0.02
# number of days before lowest fee is reached
feeReduction.daysToAge = 30

# Experimental!
# Large voters unvoting can be a big pain for validators, as they can leave the pool
# without warning and leave the pool without validator state, as validators are well balanced
# these days. This penalizes other voters, and the pool operator then has to beg for votes
#
# In order to curb that, you can elect to only pay out to current voters.
# As this is just a one day payout, the 'penalty' to these voters is minimal, and only a
# minor deterrent.  This will deter 'pool jumping' to some degree.
# Setting this to 'true' will enable this feature.
# It is highly recommended to make your voters aware of this functionality if you choose to
# enable it!
# Note: user's can effectively bypass this feature if they unvote all but 1 sem.
dontPayPoolQuitters = false
# address to collect void payments.  If you need to distribute these votes in the future
# the funds are kept safe.  They can also be distributed to active voters if you wish, after some grace
# period has occurred.
poolQuitterAddress = <SET IF ENABLED>

# which block to start processing at
# This can usually be left at 0, but if you are just opening a new pool, set it to the block
# you want to start making payments at.  If you ran a delegate before, and are just opening this
# up as a pool, please use the latest block number
startProcessingAtBlock = 0

# Stats logging interval (in milliseconds)
# 3600000 is one hour
loggingIntervalMs = 3600000

# data directory for payouts
dataDirectory = payouts

# Minimum Payout (in SEM)
minPayoutSem = 0.25

# the note to apply on payments
paymentNote = semuxpool.com

# Minimum number of blocks forged before paying out
# once per hour is 120
# once per day is 2880
# once per week is 20160
# Note: this is only used if 'payoutTime' is not selected.
# It is currently uncommon to want to pay on a block schedule, and
# this is left merely for legacy purposes
payoutEveryNBlocks = 2880

# % of profits to donate to developer for beer
# to keep working on this.
# This is purely optional, set it to 0 if you wish, but
# continued development on this project only occurs with your
# support.
# If you change percent below default, you will not be able
# to list your delegate on semuxpool.com
# But you can still advertise yourself.
developerBeerFundPercent = 0.02

# Whether to list this on semuxpool.com
# So visitors to site can see your delegate and vote for it
submitToAggregationSite = true